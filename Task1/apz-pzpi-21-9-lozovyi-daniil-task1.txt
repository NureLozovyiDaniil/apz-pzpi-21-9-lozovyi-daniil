1.1	Передумови

У наш час гуманітарна допомо͏га має вирішальне значення д͏ля надання допомоги людям під ча͏с криз і допомоги тим, х͏то потребує підтримк͏и. ͏Волонтери в цій͏ області͏ стикаються ͏з різними труднощами з координацією моніторингу та ефективним розподілом гуманітарних вантажів.
Сьогодні існ͏у͏є значний попит на нада͏ння волонтерам інструмен͏тів, які допомагають їм ефективно керувати та контролювати гума͏нітарні вантажі. Традиційні методи управління та відст͏еження, такі як паперові записи, мо͏жуть ͏бути повільн͏ими та р͏есурсомісткими, що ускладнюється бюрократ͏і͏є͏ю. Усним угодам бракує прозоро͏сті та ефективності, що може призвести до сценаріїв, коли гуманітарні ван͏тажі б͏удуть втр͏ачені або викрадені, що є дуже͏ небажан͏ою ситуацією.
Створенн͏я чіткої та ефективної програмної системи, спрямованої на підтримку волонтерів у д͏оставц͏і та відстеженні гумані͏тарної допомоги, є кроком д͏о покращення цього про͏цес͏у. Ця система буде забезпечувати зручні інструменти для призначення відповідальних осіб, відстеження руху товарів за допомогою RFID-міток, документування поставок з фото-підтвердженням та зможе надати звітність відправнику та отримувачу про поточний стан вантажу. Такий підхід допоможе забезпечити прозорість та ефективність управління гуманітарною допомогою, покращити результативність роботи волонтерів та забезпечити кращу підтримку тим, хто цього найбільше потребує.

1.2	Можливості для бізнесу

На сьогоднішній день на ринку волонтерських сервісів існує можливість для створення нового продукту, який допоможе більш ефективно доставляти гуманітарні вантажі. Можемо розглянути вже існуючі подібні сервіси у якості конкурентів.
1.	Helplist (https://helplist.io/#filter/0/0/all): Сервіс за функціоналом схожий на дошку оголошень, де люди можуть розміщати власні оголошення та очікувати на допомогу. Волонтери ж в свою чергу передивляються їх та можуть допомогти будь-кому за бажанням. Сервіс не є досконалим, оскільки чесність деяких запитів може бути сумнівною, а відповідальність за перевірку та цілісність під час доставки перекладається на волонтера. Замість цього, можна створити систему з чітким відстеженням гуманітарної допомоги та підтвердженням доставки, з можливою фото-фіксацією
2.	Українська волонтерська служба (https://platforma.volunteer.country/): Платформа для волонтерів та малих волонтерських організацій. Спеціалізується більше на розміщенні світлин з волонтерських заходів та залучень волонтерів та людей до них. Має велику кількість різних категорій людей для допомоги. Сервіс також має недоліки, а саме брак функціоналу з першого сервісу, можливість поодиноким людям, які потребують допомоги, розмістити власну заявку, або цей процес є більш складним, ніж він має бути.
Запропонована нами програмна система має вирішити вищезазначені недоліки та спростити роботу волонтерів та волонтерських організацій.

2.1	Окреслення концепції

Програмний продукт, що розробляється, має на меті створення доступного та ефективного інструменту для організації та відстеження гуманітарної допомоги. Його призначення полягає в тому, щоб надати волонтерам та гуманітарним організаціям методи відстеження та керування гуманітарними вантажами. Основною ідеєю є створення прозорості у процесі допомоги, що зменшить ризики як ненавмисної втрати вантажів так і навмисного присвоєння. Організації матимуть можливість додавати відповідальних осіб до вантажу, відслідковувати його переміщення та розподілення. Окремі волонтери зможуть відгукнутися за запити людей та допомогти окремим особам. Отримувачі допомоги зможуть чітко розуміти що відбувається з їх вантажем, де він знаходиться і на якій стадії доставки.

2.2	Головна функціональність

Загальний функціонал:
MF-1) Реєстрація та авторизація;
MF-2) Перегляд заявок на допомогу;
Для організацій:
MF-3) Створення вантажів;
MF-4) Призначення відповідальних осіб (волонтерів) на ці вантажі;
MF-5) Перегляд поточного статусу кожного вантажу, його останнє місцезнаходження, задокументоване відповідальними особами, його цілісність;
MF-6) Перегляд статистики організації та доставок;
MF-7) Керування вантажами на мапі та їх маршрутизація;
MF-8) Оплата підписки та/або благодійні внески в організацію;
Для волонтерів:
MF-9) Приєднання до організацій;
MF-10) Створення та сканування RFID міток для вантажів;
MF-11) Документування вантажу що прибув до кінцевої або проміжної точки;
MF-12) Можливість самостійного відгуку на заявку на допомогу;
Для отримувачів допомоги:
MF-13) Створення заявок на допомогу;
MF-14) Приєднання до благодійних компаній для отримання допомоги;
MF-15) Відслідковування призначених вантажів;
MF-16) Підтвердження отримання;
MF-17) Можливість прямого спілкування з організацією чи волонтером через вбудований чат.
Для адміністраторів:
MF-18) Керування даними користувачів та організацій. Бан користувачів.

3.1	Рамки первинного випуску

Backend частина:
1.	Сервіс реєстрації та авторизації користувачів;
2.	Логіка обробки запитів користувачів на створення та керування вантажами, створення та перегляд заявок на допомогу, призначення відповідальних осіб;
3.	Сервіс для відслідковування руху гуманітарних вантажів з використанням RFID міток та отриманих даних від волонтерів;
4.	Захист даних(номерів телефонів, адрес, паролів) та конфіденційність інформації з використанням шифрування.
Frontend частина:
1.	Інтерфейс для реєстрації та авторизації користувачів;
2.	Панель керування для організацій з можливістю створення вантажів, призначення відповідальних осіб, перегляду статистики та статусів цих вантажів;
3.	Інтерфейс для волонтерів з можливістю приєднання до організацій, документування доставки та звітування. Також для особистого відгуку на заявки про допомогу від користувачів;
4.	Форма для отримувачів допомоги для створення заявок на допомогу, відслідковування вантажів, підтвердження;
5.	Локалізація усіх форм та інтерфейсів українською на англійською мовами.
Mobile частина:
1.	Відслідковування вантажів, оновлення їх статусів та додавання фотографій для волонтерів;
2.	Створення заявок на допомогу та перегляд статусу їх доставки для отримувача;
3.	Локалізація усіх форм та інтерфейсів українською на англійською мовами.
IoT частина:
1.	Створення унікальної RFID мітки для вантажу;
2.	Зчитування RFID міток та передача даних про рух вантажів до системи;
3.	Зміна статусу вантажу всередині мітки.

3.2	Рамки наступних випусків

1.	Додавання чату для спілкування волонтерів маж собою та з людьми, що потребують допомоги;
2.	Створення інтерактивної мапи для відслідковування маршрутів вантажів, їх зміна в режимі реального часу;
3.	Можливість збору коштів на допомогу від бажаючих.

4.3 Робоче середовище

Система буде розміщена на веб-хостингу, що означає доступ користувачів з будь-якої точки світу і будь-якого часового поясу. Система буде доступна цілодобово, оскільки це може бути критично важливо для деяких організацій та людей. Інформація буде створена та використана на різних платформах(веб-сайт та мобільний додаток), її потрібно буде об'єднати та зробити централізованою. Оскільки інформація буде зберігатися на сервері, час відповіді на запит буде відправлено залежатиме від того, де знаходиться користувач та якість їхнього інтернет-зв'язку. Контроль доступу та захист даних будуть ключовими вимогами для системи, з використанням жорстких заходів для упередження несанкціонованого доступу та забезпечення приватності особистої інформації користувачів (шифрування паролів, номерів телефонів, адрес), а також з урахуванням заходів для запобігання SQL ін’єкціям під час запитів у базу даних. Узагальнено кажучи, створена система повинна обробляти велике число користувачів і даних, виконувати багато операцій одночасно і забезпечувати швидкий та безпечний доступ до даних з будь-якої точки світу.
Технології які будуть використовуватись під час розробки:
1.	Серверна частина: буде побудовано на мікросервісній архітектурі, мова програмування Go, бібліотека для керування HTTP запитами “Echo”, бібліотека для взаємодії сервісів між собою “go-kit”, бібліотека для використання ORM під час взаємодії з БД “Bun”, бібліотека для серверного рендеру деяких веб-сторінок “templ”;
2.	Frontend веб-частина: Веб-фреймворк Svelte, бібліотека для вбудовування запитів у HTML “htmx”;
3.	Mobile частина: мова прорамування Kotlin, бібліотека для роботи з HTTP запитами Okhttp, використання AndroidSDK;
4.	IoT частина: мова програмування C++, бібліотека для роботи з HTTP запитами ESPAsyncWebServer, бібліотеки для роботи з RFID мітками MFRC522, PN532.
